description = "Search Layout"
==
<?php
function onStart() {
//$regionLists = Db::table('expedia_expediaimport_regions')->select('region_name as id','region_name as text')->take(100)->get();

//$regionLists = Db::table('expedia_expediaimport_regions')->select('region_name')->orderBy('region_id', 'asc')->get();
$regionLists = Db::select("SELECT region_id, region_name, region_name_full FROM expedia_expediaimport_regions ORDER BY field(region_type,'country','province_state','high_level_region','multi_city_vicinity','city','neighborhood','airport','point_of_interest','train_station','metro_station'), region_id");

//$regionJson = Db::select("SELECT region_id, region_name, region_name_full FROM expedia_expediaimport_regions ORDER BY field(region_type,'country','province_state','high_level_region','multi_city_vicinity','city','neighborhood','airport','point_of_interest','train_station','metro_station'), region_id");

// use manual select OLD school!
//$regionLists = Db::select("SELECT region_id AS property_id, region_name AS name FROM expedia_expediaimport_regions UNION ALL SELECT property_id, name FROM expedia_expediaimport_properties ORDER BY name"); 

//$JsonRegions = $regionLists;
/*foreach ($regionJson as $key => $value) {
  $jsonRegionsArray[] = $value;
}
 */

foreach ($regionLists as $regionList) {
         $RegionArray[] = $regionList->region_name_full;
}


$propertyLists = Db::select("SELECT expedia_expediaimport_properties.property_id, expedia_expediaimport_properties.name, expedia_expediaimport_properties.city, expedia_expediaimport_properties.state, expedia_expediaimport_properties.country_code,rainlab_location_countries.name AS country_name FROM expedia_expediaimport_properties JOIN rainlab_location_countries ON expedia_expediaimport_properties.country_code = rainlab_location_countries.code order by expedia_expediaimport_properties.rank");


foreach ($propertyLists as $propertyList) {
        $propertyName = $propertyList->name.", ".$propertyList->city.", ".$propertyList->state.", ".$propertyList->country_name;
        //$newpropertyName = strlen($propertyName) > 60 ? substr($propertyName,0,60)."..." : $propertyName;
        $PropertyArray[] = $propertyName;
}


//print_r($jsonRegionsArray);
$this['RegionArray'] = $RegionArray;
$this['PropertyArray'] = $PropertyArray;
//$this['myRegions'] = $jsonRegionsArray;
//$this['myList'] = $RegionArray->toJson();

}
?>
==
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>View Retreats - {{ this.page.title }}</title>
        <meta name="description" content="{{ this.page.meta_description }}">
        <meta name="title" content="{{ this.page.meta_title }}">
        <meta name="author" content="OctoberCMS">
        <meta name="generator" content="OctoberCMS">
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta http-equiv="x-ua-compatible" content="ie=edge">
        <meta name="google-signin-client_id" content="YOUR_CLIENT_ID.apps.googleusercontent.com">
        <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css">
        <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/github-markdown-css@2.4.1/github-markdown.min.css">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"></script> -->
         <link href="{{ [
          'assets/vendor/font-awesome/css/font-awesome.min.css',
          'assets/vendor/bootstrap/dist/css/bootstrap.css',
          'assets/less/main.less',
          'assets/js/assets/owl.carousel.min.css',
          'assets/js/assets/owl.theme.default.min.css'
        ]|theme }}" rel="stylesheet">
        
        {% styles %}

    </head>
    <body class="page-{{ this.page.id }}">

        <!-- side nav -->
        {% partial 'site/sidenav' %}
        {% partial 'site/sideuser' %}
        {% partial 'site/opacity-body-side-nav' %}
        

        <!-- Header -->
        <header id="layout-header" class="search-page">
            {% partial 'site/header-home' %}
            {% partial 'site/search-bar' %}
        </header>


       <!-- search filter -->
       <div class="landing_post_content">
           
           <div class="container page-container ">
            <section class="filter-block d-flex justify-content-between">
                <div class="landing-post-title">
                    <ul class="list-unstyled list-filter">
                        <li><a href="javascript:void(0)" class="active">SHOW ALL</a></li>
                        <li><a href="javascript:void(0)">HOTELS</a></li>
                        <li><a href="javascript:void(0)">HOMES</a></li>
                    </ul>
                </div>
                <div class="list-icon d-flex justify-content-between">
                    <div class="list-filter-tag clearfix d-none d-sm-block">
                        <!-- <span class="item" id="romantic_getaway">Romantic Getaway<span class="close-item">x</span> </span> -->
                    </div>
                  <div class="filter-btn" role="group" aria-label="Basic example">
                    <button type="button" class="btn" id="btn-filter" data-toggle="modal" data-target="#RefineSearchModalCenter">
	                    <span id="count-filter">1</span> 
	                   <i class="fa fa-filter"></i>
	                    <span class="icon-text">Filter</span>
	               </button>
                    <button type="button" class="btn" id="btn-map">
                        <img src="{{ 'assets/images/map-small-grey.png'|theme }}" class="icon-map d-none d-sm-block" alt="Icon Map"> 
                        <img src="{{ 'assets/images/MapActive.png'|theme }}" class="icon-map-active d-none" alt="Icon Map"> 
                        <img src="{{ 'assets/images/map-mobile.png'|theme }}" class="icon-map-mobile d-sm-none" alt="Icon Map"> 
	                    <span class="icon-text">Map</span>
                    </button>
                    
                  </div>
                 
                </div>
           </section>
           <div class="list-filter-tag clearfix d-sm-none">
                <!-- <span class="item" id="romantic_getaway">Romantic Getaway<span class="close-item">x</span> </span> -->
            </div>
    	</div>
       </div>
        <!-- Content -->
        <section id="layout-content"  >
            {% page %}
        </section>
        <!-- Footer Now-->
        <footer id="layout-footer">
            {% partial 'site/footer' %}
        </footer>

        <!-- Scripts Updated -->

        <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
       

        {% framework extras %}
        {% scripts %}

        <script type="text/javascript" src="{{ [ 
          'assets/js/owl.carousel.min.js',
          'assets/js/scripts.js',
          'assets/js/moment.min.js',    
          'assets/js/litepicker.js',   
          'assets/js/daterangepicker.js',
          'assets/js/slick.min.js'
       ]|theme }}"></script>

       <!-- <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
       <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script> -->
        
        <!-- <script src="http://localhost:8888/vr3/plugins/peterhegman/slickslider/assets/slick/slick.min.js"></script> -->
         <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
         <script src="themes/view-retreats/assets/js/typeahead.bundle.js"></script>
          <script> 
            $(document).ready(function(){

              /*var substringMatcher = function(strs) {
                return function findMatches(q, cb) {
                  var matches, substringRegex;

                  // an array that will be populated with substring matches
                  matches = [];

                  // regex used to determine if a string contains the substring `q`
                  substrRegex = new RegExp(q, 'i');

                  // iterate through the pool of strings and for any string that
                  // contains the substring `q`, add it to the `matches` array
                  $.each(strs, function(i, str) {
                    if (substrRegex.test(str)) {
                      matches.push(str);
                    }
                  });

                  cb(matches);
                };
              };*/

              var states = {{ RegionArray|json_encode|raw }};
              var properties = {{ PropertyArray|json_encode|raw }};
              var regions = {{ myRegions|json_encode|raw }};
            
           

              //var states = JSON.stringify(myarray);
              var regions = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                local: regions
              });


              var states = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                local: states
              });

              var properties = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                local: properties
              });


              $('.typeahead').typeahead({
                hint: false,
                highlight: true,
                minLength: 1
              },
              {
                name: 'states',
                limit: 5,
                source: states
                /*templates: {
                  suggestion: function(data){
                        return '<div><div class="myicon">' + data + '</div></div>';
                  }
                }*/
              },
              {
                name: 'properties',
                limit: 2,
                source: properties
              }


              /*$('.typeahead').typeahead(null, {
                name: 'regions',
                limit: 5,
                source: regions,
                templates: {
                  suggestion: Handlebars.compile('<div><strong>{{region_name}}</strong> – {{region_id}}</div>')
                }*/


              );
            });

          </script>
    </body>
</html>